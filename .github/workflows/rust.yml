name: safe-client-gateway

on:
  create:
    tags:
      - v*
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2020-12-09
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-cargo-modules
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-build-${{ env.cache-name }} }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all --locked
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Awarnings'

      - name: Run grcov
        id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          config: ./.github/action-rs/grcov.yml
          coveralls-token: ${{ secrets.COVERALLS_TOKEN }}

      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ github.workspace }}/lcov.info

  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_ORG: gnosispm
      DOCKERHUB_PROJECT: safe-client-gateway
    needs: [rustfmt, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy main
        if: github.ref == 'refs/heads/main'
#        run: bash scripts/deploy_docker.sh staging
        run: echo "Main deploy"
      - name: Deploy tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "Tag deploy ${GITHUB_REF##*/}"
#        run: bash scripts/deploy_docker.sh ${GITHUB_REF##*/}
      - name: Deploy Develop # unused
        if: github.ref == 'refs/heads/develop'
        run: bash scripts/deploy_docker_github.sh develop
