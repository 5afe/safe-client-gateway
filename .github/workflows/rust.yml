name: safe-client-gateway

on: [ push ]

env:
  CARGO_TERM_COLOR: always

jobs:

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set variables
        run: |
          TOOLCHAIN=$(cat rust-toolchain)
          echo "TOOLCHAIN_VER=$TOOLCHAIN" >> $GITHUB_ENV

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
          components: rustfmt

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set variables
        run: |
          TOOLCHAIN=$(cat rust-toolchain)
          echo "TOOLCHAIN_VER=$TOOLCHAIN" >> $GITHUB_ENV

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
          components: rustfmt

      - name: Cargo cache
        uses: Swatinem/rust-cache@v1

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all --locked
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Awarnings'

      - name: Cache grcov
        id: grcov-cache
        uses: actions/cache@v2.1.5
        with:
          path: /home/runner/.cargo/bin/
          key: ${{ runner.os }}-grcov-v080

      - name: Fetch grcov
        if: steps.grcov-cache.outputs.cache-hit != 'true'
        run: curl --location https://github.com/mozilla/grcov/releases/download/v0.8.0/grcov-linux-x86_64.tar.bz2 | tar jxf -

      - name: Run grcov
        id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          config: ./.github/action-rs/grcov.yml

      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ github.workspace }}/lcov.info

  docs:
    runs-on: ubuntu-latest
    needs: [ rustfmt, tests ]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # checks out all branches and tags, necessary for versioning /about endpoint

      - name: Set variables
        run: |
          TOOLCHAIN=$(cat rust-toolchain)
          echo "TOOLCHAIN_VER=$TOOLCHAIN" >> $GITHUB_ENV

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
          components: rustfmt

      - name: Cargo cache
        uses: Swatinem/rust-cache@v1

      - name: Generate docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --workspace --locked

      - name: Move folder
        run: |
          rm -rf target/doc/docs
          mv target/doc/safe_client_gateway target/doc/docs
          cp .github/landing_page/* target/doc

      - name: Fix internal links
        run: find ./target/doc/docs/ -type f -exec sed -i "s/safe_client_gateway/docs/g" {} \;

      - name: Update docs
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc

  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_ORG: gnosispm
      DOCKERHUB_PROJECT: safe-client-gateway
    needs: [ rustfmt, tests ]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # checks out all branches and tags, necessary for versioning /about endpoint

      - name: Dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy main
        if: github.ref == 'refs/heads/main'
        run: bash scripts/deploy_docker.sh staging

      - name: Deploy tag
        if: startsWith(github.ref, 'refs/tags/')
        run: bash scripts/deploy_docker.sh ${GITHUB_REF##*/}

      - name: Deploy develop # unused
        if: github.ref == 'refs/heads/develop'
        run: bash scripts/deploy_docker.sh develop
